#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–ª–∞—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å T-Bank API
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è, –ø–æ–∑–∏—Ü–∏–π –∏ –æ–ø–µ—Ä–∞—Ü–∏–π
"""

import asyncio
import sys
import os
from pathlib import Path
from datetime import datetime, timedelta
import pandas as pd

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from src.data.enhanced_tbank_provider import EnhancedTBankProvider
from src.trading.tbank_broker import TBankBroker
from loguru import logger

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger.remove()
logger.add(sys.stdout, level="INFO", format="<green>{time:HH:mm:ss}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
if sys.platform == 'win32':
    import codecs
    sys.stdout = codecs.getwriter('utf-8')(sys.stdout.buffer, 'strict')
    sys.stderr = codecs.getwriter('utf-8')(sys.stderr.buffer, 'strict')


async def check_cloud_sync_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–±–ª–∞—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    
    print("‚òÅÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–ª–∞—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å T-Bank API")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    token = os.environ.get('TINKOFF_TOKEN')
    if not token:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TINKOFF_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω: set TINKOFF_TOKEN=your_token_here")
        return
    
    # Account ID –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    account_id = None
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ T-Bank API
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ T-Bank API")
        print("-" * 40)
        
        broker = TBankBroker(token=token, sandbox=True, account_id=account_id)
        await broker.initialize()
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ T-Bank API —É—Å–ø–µ—à–Ω–æ")
        print(f"üìä Account ID: {broker.account_id} (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω)")
        print(f"üèñÔ∏è Sandbox —Ä–µ–∂–∏–º: {broker.sandbox}")
        
        if broker.account_id:
            print(f"‚úÖ –°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω/—Å–æ–∑–¥–∞–Ω")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—á–µ—Ç")
            return
        
        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è")
        print("-" * 40)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Ä—Ç—Ñ–µ–ª–µ
        portfolio = await broker.get_portfolio()
        print(f"‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {portfolio.get('total_amount', 0):,.2f} ‚ÇΩ")
        print(f"üìà –û–∂–∏–¥–∞–µ–º–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {portfolio.get('expected_yield', 0):,.2f} ‚ÇΩ")
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–∑–∏—Ü–∏–π
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–∑–∏—Ü–∏–π")
        print("-" * 40)
        
        await broker.update_positions()
        positions = broker.positions
        
        if positions:
            print(f"‚úÖ –ü–æ–∑–∏—Ü–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(positions)} –ø–æ–∑–∏—Ü–∏–π")
            for ticker, pos_data in positions.items():
                print(f"  üìä {ticker}: {pos_data['quantity']:.4f} —à—Ç. –ø–æ {pos_data['average_price']:.2f} ‚ÇΩ")
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞")
        print("-" * 40)
        
        balances = await broker.get_account_balance()
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω")
        for currency, amount in balances.items():
            print(f"  üí∞ {currency.upper()}: {amount:,.2f}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
        print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π")
        print("-" * 40)
        
        from_date = datetime.now() - timedelta(days=7)
        operations = await broker.get_operations(from_date=from_date)
        
        if operations:
            print(f"‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(operations)} –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ 7 –¥–Ω–µ–π")
            
            # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º –æ–ø–µ—Ä–∞—Ü–∏–π
            operation_types = {}
            for op in operations:
                op_type = op.get('type', 'UNKNOWN')
                operation_types[op_type] = operation_types.get(op_type, 0) + 1
            
            print("  üìä –¢–∏–ø—ã –æ–ø–µ—Ä–∞—Ü–∏–π:")
            for op_type, count in operation_types.items():
                print(f"    {op_type}: {count}")
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π")
        
        # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("-" * 40)
        
        provider = EnhancedTBankProvider(token, sandbox=True)
        await provider.initialize()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        instruments = await provider.get_available_instruments()
        print(f"‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(instruments)} –¥–æ—Å—Ç—É–ø–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        test_symbols = ['SBER', 'GAZP']
        realtime_data = await provider.get_realtime_data(test_symbols)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏: {len(realtime_data)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
        
        for symbol, data in realtime_data.items():
            print(f"  üìà {symbol}: {data['price']:.2f} ‚ÇΩ ({data['timestamp']})")
        
        # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–∫–∞–Ω–∞ –∑–∞—è–≤–æ–∫
        print("\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–∫–∞–Ω–∞ –∑–∞—è–≤–æ–∫")
        print("-" * 40)
        
        for symbol in test_symbols:
            orderbook = await provider.get_orderbook(symbol, depth=5)
            if orderbook:
                print(f"‚úÖ –°—Ç–∞–∫–∞–Ω –¥–ª—è {symbol}: {len(orderbook.get('bids', []))} bids, {len(orderbook.get('asks', []))} asks")
                print(f"  üí∞ –°–ø—Ä–µ–¥: {orderbook.get('spread', 0):.2f} ‚ÇΩ ({orderbook.get('spread_percent', 0):.2f}%)")
            else:
                print(f"‚ùå –°—Ç–∞–∫–∞–Ω –¥–ª—è {symbol} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # 8. –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        print("\n8Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
        print("-" * 40)
        
        sync_status = {
            'API Connection': '‚úÖ OK',
            'Portfolio': '‚úÖ OK' if portfolio else '‚ùå Error',
            'Positions': '‚úÖ OK' if positions else '‚ÑπÔ∏è Empty',
            'Balance': '‚úÖ OK' if balances else '‚ùå Error',
            'Operations': '‚úÖ OK' if operations else '‚ÑπÔ∏è Empty',
            'Instruments': '‚úÖ OK' if instruments else '‚ùå Error',
            'Realtime Data': '‚úÖ OK' if realtime_data else '‚ùå Error',
            'Order Book': '‚úÖ OK' if any(await provider.get_orderbook(s, depth=1) for s in test_symbols) else '‚ùå Error'
        }
        
        print("üìä –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
        for component, status in sync_status.items():
            print(f"  {component}: {status}")
        
        # –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        success_count = sum(1 for status in sync_status.values() if '‚úÖ' in status)
        total_count = len(sync_status)
        
        print(f"\nüìà –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å: {success_count}/{total_count} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        if success_count == total_count:
            print("üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å –æ–±–ª–∞–∫–æ–º!")
        elif success_count >= total_count * 0.8:
            print("‚úÖ –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π")
        
        print("\n" + "=" * 60)
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–ª–∞—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        print("‚òÅÔ∏è –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å –æ–±–ª–∞—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ T-Bank API")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("‚òÅÔ∏è –ü–†–û–í–ï–†–ö–ê –û–ë–õ–ê–ß–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò T-BANK")
    print("=" * 60)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:")
    print("‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ T-Bank API")
    print("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø–æ—Ä—Ç—Ñ–µ–ª—è")
    print("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø–æ–∑–∏—Ü–∏–π")
    print("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –±–∞–ª–∞–Ω—Å–∞")
    print("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π")
    print("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å—Ç–∞–∫–∞–Ω–∞ –∑–∞—è–≤–æ–∫")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    token = os.environ.get('TINKOFF_TOKEN')
    if not token:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TINKOFF_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        print("\n–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω: https://www.tbank.ru/invest/settings/api/")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: set TINKOFF_TOKEN=your_token_here")
        print("3. –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º: TINKOFF_TOKEN=your_token_here")
        return
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
    await check_cloud_sync_status()
    
    print("\nüéâ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("‚òÅÔ∏è –û–±–ª–∞—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main())
