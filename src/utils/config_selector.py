"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
from pathlib import Path
from typing import Dict, Any, Optional
from loguru import logger


class ConfigSelector:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏
    """
    
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
        """
        self.root_dir = Path(__file__).parent.parent.parent
        self.config_dir = self.root_dir / "config"
        
        # –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        self.configs = {
            "1": {
                "name": "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º",
                "file": "test_config.yaml",
                "description": "–ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏",
                "features": [
                    "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥",
                    "–ê–Ω–∞–ª–∏–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏: –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤: –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥",
                    "–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏: 1 –º–∏–Ω—É—Ç–∞",
                    "–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: 5% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞",
                    "–ü–æ—Ä–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: 50%"
                ]
            },
            "2": {
                "name": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º",
                "file": "main.yaml",
                "description": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "features": [
                    "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç",
                    "–ê–Ω–∞–ª–∏–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏: –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤: –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç",
                    "–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏: 1 —á–∞—Å",
                    "–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: 10% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞",
                    "–ü–æ—Ä–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: 60%"
                ]
            },
            "3": {
                "name": "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è",
                "file": "aggressive_trading.yaml",
                "description": "–ê–∫—Ç–∏–≤–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤",
                "features": [
                    "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É",
                    "–ê–Ω–∞–ª–∏–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏: –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤: –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã",
                    "–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏: 30 –º–∏–Ω—É—Ç",
                    "–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: 5% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞",
                    "–ü–æ—Ä–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: 55%"
                ]
            },
            "4": {
                "name": "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
                "file": "conservative_investing.yaml",
                "description": "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —Ä–∏—Å–∫–∞–º–∏",
                "features": [
                    "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –∫–∞–∂–¥—ã–π —á–∞—Å",
                    "–ê–Ω–∞–ª–∏–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏: –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤: –∫–∞–∂–¥—ã–π —á–∞—Å",
                    "–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏: 2 —á–∞—Å–∞",
                    "–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: 20% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞",
                    "–ü–æ—Ä–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: 75%"
                ]
            }
        }
    
    def show_menu(self) -> None:
        """
        –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        """
        print("\n" + "="*80)
        print("üéØ –í–´–ë–û–† –†–ï–ñ–ò–ú–ê –¢–û–†–ì–û–í–û–ô –°–ò–°–¢–ï–ú–´")
        print("="*80)
        
        for key, config in self.configs.items():
            print(f"\n{key}. {config['name']}")
            print(f"   üìÑ –§–∞–π–ª: {config['file']}")
            print(f"   üìù {config['description']}")
            print("   ‚öôÔ∏è  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
            for feature in config['features']:
                print(f"      ‚Ä¢ {feature}")
        
        print(f"\n5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
        print(f"   üìÑ –§–∞–π–ª: —É–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –≤—Ä—É—á–Ω—É—é")
        print(f"   üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        
        print(f"\n0. –í—ã—Ö–æ–¥")
        print("="*80)
    
    def get_user_choice(self) -> Optional[str]:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Returns:
            –ü—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ None
        """
        while True:
            try:
                self.show_menu()
                choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (0-5): ").strip()
                
                if choice == "0":
                    print("‚ùå –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
                    return None
                
                elif choice in self.configs:
                    config = self.configs[choice]
                    config_path = self.config_dir / config['file']
                    
                    if not config_path.exists():
                        print(f"‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {config_path}")
                        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                        continue
                    
                    print(f"\n‚úÖ –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: {config['name']}")
                    print(f"üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_path}")
                    return str(config_path)
                
                elif choice == "5":
                    return self._get_custom_config()
                
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                    
            except KeyboardInterrupt:
                print("\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return None
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    
    def _get_custom_config(self) -> Optional[str]:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        
        Returns:
            –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ None
        """
        print("\nüìÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
        print("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–∏–ª–∏ Enter –¥–ª—è –æ—Ç–º–µ–Ω—ã):")
        
        try:
            path = input("üëâ –ü—É—Ç—å: ").strip()
            
            if not path:
                return None
            
            config_path = Path(path)
            
            # –ï—Å–ª–∏ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –¥–µ–ª–∞–µ–º –µ–≥–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            if not config_path.is_absolute():
                config_path = self.root_dir / path
            
            if not config_path.exists():
                print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {config_path}")
                input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                return None
            
            if not config_path.suffix.lower() in ['.yaml', '.yml']:
                print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è .yaml –∏–ª–∏ .yml")
                input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                return None
            
            print(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_path}")
            return str(config_path)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            return None
    
    def select_config(self) -> Optional[str]:
        """
        –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        
        Returns:
            –ü—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ None
        """
        try:
            # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ Windows –∏ Unix)
            os.system('cls' if os.name == 'nt' else 'clear')
            
            print("üöÄ –°–ò–°–¢–ï–ú–ê –ù–ï–ô–†–û–°–ï–¢–ï–í–´–• –ò–ù–í–ï–°–¢–ò–¶–ò–ô")
            print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏!")
            
            return self.get_user_choice()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return None
    
    def get_config_info(self, config_path: str) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        
        Args:
            config_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        """
        try:
            config_file = Path(config_path).name
            
            # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Å–ø–∏—Å–∫–µ
            for config in self.configs.values():
                if config['file'] == config_file:
                    return {
                        'name': config['name'],
                        'description': config['description'],
                        'features': config['features'],
                        'path': config_path
                    }
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ, —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
            return {
                'name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
                'description': f'–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ —Ñ–∞–π–ª–∞ {config_file}',
                'features': ['–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Ñ–∞–π–ª–∞'],
                'path': config_path
            }
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return {
                'name': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
                'description': '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
                'features': [],
                'path': config_path
            }


def select_trading_config() -> Optional[str]:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    
    Returns:
        –ü—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ None
    """
    selector = ConfigSelector()
    return selector.select_config()


if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
    config_path = select_trading_config()
    if config_path:
        print(f"\nüéØ –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_path}")
    else:
        print("\n‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
