"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π
–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""

import asyncio
import sys
import os
from typing import Optional
from loguru import logger
from datetime import datetime
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent.parent))

from src.utils.command_manager import CommandManager, CommandType

class InteractiveConsole:
    """
    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π
    """
    
    def __init__(self):
        self.command_manager = CommandManager()
        self.running = False
        self.system = None
        self.portfolio = None
    
    def set_system_components(self, system=None, portfolio=None):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã"""
        self.system = system
        self.portfolio = portfolio
        self.command_manager.set_system_components(system, portfolio)
        logger.info("–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ InteractiveConsole")
    
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏"""
        self.running = True
        
        print("\n" + "="*70)
        print("üöÄ NEYRO-INVEST INTERACTIVE CONSOLE")
        print("="*70)
        print("üí° –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
        print("üí° –í–≤–µ–¥–∏—Ç–µ 'exit' –∏–ª–∏ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
        print("="*70)
        
        while self.running:
            try:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                command_line = await self._get_user_input()
                
                if not command_line:
                    continue
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                if command_line.lower() in ['exit', 'quit', 'q']:
                    await self._cmd_exit()
                    break
                
                # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
                success = await self.command_manager.execute_command(command_line)
                
                if not success:
                    print("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
                
                print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                
            except KeyboardInterrupt:
                print("\n‚ö†Ô∏è  –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                await self._cmd_exit()
                break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏: {e}")
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    async def _get_user_input(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–≤–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio –¥–ª—è –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ –≤–≤–æ–¥–∞
            loop = asyncio.get_event_loop()
            user_input = await loop.run_in_executor(None, input, "neyro-invest> ")
            return user_input.strip()
        except EOFError:
            return "exit"
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–≤–æ–¥–∞: {e}")
            return ""
    
    async def _cmd_exit(self):
        """–í—ã—Ö–æ–¥ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏"""
        print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏...")
        self.running = False
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Å–æ–ª–∏"""
        self.running = False

async def start_interactive_console(system=None, broker=None, portfolio=None):
    """
    –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏
    
    Args:
        system: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–∏—Å—Ç–µ–º—ã
        broker: –≠–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–æ–∫–µ—Ä–∞
        portfolio: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è
    """
    console = InteractiveConsole()
    console.set_system_components(system, portfolio)
    await console.start()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Å–æ–ª–∏ –±–µ–∑ —Å–∏—Å—Ç–µ–º—ã (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    asyncio.run(start_interactive_console())
