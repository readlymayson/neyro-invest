"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–≥–Ω–∞–ª–æ–≤.
"""

import asyncio
import sys
import os
from pathlib import Path
import pandas as pd
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
root_dir = Path(__file__).parent.parent
sys.path.append(str(root_dir))

from src.trading.trading_engine import TradingEngine, TradingSignal
from src.utils.config_manager import ConfigManager
from loguru import logger

async def test_conflicting_signals():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–≥–Ω–∞–ª–æ–≤.
    """
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤")

    try:
        # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_manager = ConfigManager("config/main.yaml")
        config = config_manager.get_config()

        # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞
        trading_engine = TradingEngine(config['trading'])
        
        # 3. –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        logger.info("üîç –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è SBER
        buy_signal = TradingSignal(
            symbol="SBER",
            signal="BUY",
            confidence=0.8,
            timestamp=datetime.now(),
            source="test_buy"
        )
        
        sell_signal = TradingSignal(
            symbol="SBER", 
            signal="SELL",
            confidence=0.7,
            timestamp=datetime.now(),
            source="test_sell"
        )
        
        hold_signal = TradingSignal(
            symbol="SBER",
            signal="HOLD", 
            confidence=0.6,
            timestamp=datetime.now(),
            source="test_hold"
        )
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        logger.info("üìä –°–æ–∑–¥–∞–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã:")
        logger.info(f"  - BUY —Å–∏–≥–Ω–∞–ª: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å {buy_signal.confidence}")
        logger.info(f"  - SELL —Å–∏–≥–Ω–∞–ª: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å {sell_signal.confidence}")
        logger.info(f"  - HOLD —Å–∏–≥–Ω–∞–ª: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å {hold_signal.confidence}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã
        logger.info("üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        conflicting_signals = [buy_signal, sell_signal, hold_signal]
        
        for i, signal in enumerate(conflicting_signals, 1):
            logger.info(f"  {i}. –û–±—Ä–∞–±–æ—Ç–∫–∞ {signal.signal} —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è {signal.symbol}")
            try:
                await trading_engine._execute_signal(signal)
                logger.info(f"     ‚úÖ –°–∏–≥–Ω–∞–ª {signal.signal} –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
            except Exception as e:
                logger.warning(f"     ‚ö†Ô∏è –°–∏–≥–Ω–∞–ª {signal.signal} –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
        
        # 4. –¢–µ—Å—Ç 2: –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–≥–Ω–∞–ª—ã
        logger.info("üîç –¢–µ—Å—Ç 2: –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–≥–Ω–∞–ª—ã")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö BUY —Å–∏–≥–Ω–∞–ª–æ–≤
        buy_signals = [
            TradingSignal(symbol="GAZP", signal="BUY", confidence=0.9, source="model1"),
            TradingSignal(symbol="GAZP", signal="BUY", confidence=0.8, source="model2"), 
            TradingSignal(symbol="GAZP", signal="BUY", confidence=0.7, source="model3")
        ]
        
        logger.info("üìä –°–æ–∑–¥–∞–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è BUY —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è GAZP:")
        for i, signal in enumerate(buy_signals, 1):
            logger.info(f"  - –°–∏–≥–Ω–∞–ª {i}: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å {signal.confidence} –æ—Ç {signal.source}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–≥–Ω–∞–ª–æ–≤
        logger.info("üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–≥–Ω–∞–ª–æ–≤...")
        
        for i, signal in enumerate(buy_signals, 1):
            logger.info(f"  {i}. –û–±—Ä–∞–±–æ—Ç–∫–∞ BUY —Å–∏–≥–Ω–∞–ª–∞ –æ—Ç {signal.source}")
            try:
                await trading_engine._execute_signal(signal)
                logger.info(f"     ‚úÖ –°–∏–≥–Ω–∞–ª –æ—Ç {signal.source} –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
            except Exception as e:
                logger.warning(f"     ‚ö†Ô∏è –°–∏–≥–Ω–∞–ª –æ—Ç {signal.source} –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
        
        # 5. –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        logger.info("üîç –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
        
        # –°–æ–∑–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
        immediate_signal = TradingSignal(
            symbol="SBER",
            signal="SELL", 
            confidence=0.9,
            timestamp=datetime.now(),
            source="immediate_test"
        )
        
        logger.info("üìä –°–æ–∑–¥–∞–Ω —Å–∏–≥–Ω–∞–ª —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ:")
        logger.info(f"  - –°–∏–≥–Ω–∞–ª: {immediate_signal.signal} –¥–ª—è {immediate_signal.symbol}")
        logger.info(f"  - –í—Ä–µ–º—è: {immediate_signal.timestamp}")
        logger.info(f"  - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {trading_engine.min_trade_interval} —Å–µ–∫—É–Ω–¥")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        try:
            await trading_engine._execute_signal(immediate_signal)
            logger.info("     ‚úÖ –°–∏–≥–Ω–∞–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏)")
        except Exception as e:
            logger.info(f"     ‚ö†Ô∏è –°–∏–≥–Ω–∞–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏: {e}")
        
        # 6. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        logger.info("üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        logger.info("  - –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∂–¥—ã–π —Å–∏–≥–Ω–∞–ª –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ")
        logger.info("  - –ù–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–µ–∂–¥—É —Å–∏–≥–Ω–∞–ª–∞–º–∏")
        logger.info("  - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å–∏–º–≤–æ–ª–∞")
        logger.info("  - –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–≥–Ω–∞–ª—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ")
        
        logger.info("üéâ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(test_conflicting_signals())
