"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π.
"""

import asyncio
import sys
import os
from pathlib import Path
import pandas as pd
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
root_dir = Path(__file__).parent.parent
sys.path.append(str(root_dir))

from src.data.data_provider import DataProvider
from src.neural_networks.network_manager import NetworkManager
from src.portfolio.portfolio_manager import PortfolioManager, Position, Transaction, TransactionType
from src.trading.trading_engine import TradingEngine
from src.utils.config_manager import ConfigManager
from loguru import logger

async def test_position_limits():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π.
    """
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π")

    try:
        # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_manager = ConfigManager("config/main.yaml")
        config = config_manager.get_config()
        
        # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
        data_provider = DataProvider(config['data'])
        await data_provider.initialize()
        
        # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        portfolio_manager = PortfolioManager(config['portfolio'])
        await portfolio_manager.initialize()

        # 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å –±–æ–ª—å—à–æ–π –ø–æ–∑–∏—Ü–∏–µ–π
        logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å –±–æ–ª—å—à–æ–π –ø–æ–∑–∏—Ü–∏–µ–π")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à—É—é –ø–æ–∑–∏—Ü–∏—é (50% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞)
        large_transaction = Transaction(
            id="large_txn", 
            symbol="SBER", 
            type=TransactionType.BUY, 
            quantity=500000,  # 500,000 –∞–∫—Ü–∏–π –ø–æ ~200‚ÇΩ = 100,000,000‚ÇΩ (100% –∫–∞–ø–∏—Ç–∞–ª–∞)
            price=200.0, 
            commission=0.0, 
            timestamp=datetime.now() - timedelta(days=1)
        )
        portfolio_manager.transactions.append(large_transaction)
        portfolio_manager.cash_balance = 1_000_000 - (500000 * 200.0)  # –û—Å—Ç–∞–µ—Ç—Å—è 0‚ÇΩ
        await portfolio_manager.update_portfolio()
        
        logger.info(f"–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å —Å–æ–∑–¥–∞–Ω:")
        if portfolio_manager.current_metrics:
            logger.info(f"  - –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {portfolio_manager.current_metrics.total_value:.2f} ‚ÇΩ")
            logger.info(f"  - –î–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞: {portfolio_manager.current_metrics.cash_balance:.2f} ‚ÇΩ")
            logger.info(f"  - –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {portfolio_manager.current_metrics.invested_value:.2f} ‚ÇΩ")
            logger.info(f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π: {len(portfolio_manager.positions)}")

        # 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞
        trading_engine = TradingEngine(config['trading'])
        trading_engine.portfolio_manager = portfolio_manager
        trading_engine.data_provider = data_provider
        
        # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        logger.info("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É
        from src.trading.trading_engine import TradingSignal
        test_signal = TradingSignal(
            symbol="GAZP",
            signal="BUY",
            confidence=0.8,
            timestamp=datetime.now(),
            source="test"
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏
        position_size = await trading_engine._calculate_position_size(test_signal)
        
        logger.info(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        logger.info(f"  - –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è GAZP: {position_size}")
        logger.info(f"  - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: {portfolio_manager.current_metrics.total_value * 0.1:.2f} ‚ÇΩ (10%)")
        logger.info(f"  - –¢–µ–∫—É—â–µ–µ –æ–±—â–µ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: {portfolio_manager.current_metrics.invested_value:.2f} ‚ÇΩ")
        logger.info(f"  - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ–±—â–µ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: {portfolio_manager.current_metrics.total_value * 0.8:.2f} ‚ÇΩ (80%)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç
        if position_size == 0:
            logger.info("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –ø–æ–∑–∏—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
        else:
            logger.warning("‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏ - –ø–æ–∑–∏—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞")
        
        # 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–µ–Ω—å—à–∏–º –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º
        logger.info("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–µ–Ω—å—à–∏–º –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å —Å –º–µ–Ω—å—à–∏–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏
        portfolio_manager2 = PortfolioManager(config['portfolio'])
        await portfolio_manager2.initialize()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–æ–∑–∏—Ü–∏—é (5% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞)
        small_transaction = Transaction(
            id="small_txn", 
            symbol="SBER", 
            type=TransactionType.BUY, 
            quantity=2500,  # 2,500 –∞–∫—Ü–∏–π –ø–æ ~200‚ÇΩ = 500,000‚ÇΩ (50% –∫–∞–ø–∏—Ç–∞–ª–∞)
            price=200.0, 
            commission=0.0, 
            timestamp=datetime.now() - timedelta(days=1)
        )
        portfolio_manager2.transactions.append(small_transaction)
        portfolio_manager2.cash_balance = 1_000_000 - (2500 * 200.0)  # –û—Å—Ç–∞–µ—Ç—Å—è 500,000‚ÇΩ
        await portfolio_manager2.update_portfolio()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ—Ä–≥–æ–≤—ã–π –¥–≤–∏–∂–æ–∫
        trading_engine.portfolio_manager = portfolio_manager2
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–Ω–æ–≤–∞
        position_size2 = await trading_engine._calculate_position_size(test_signal)
        
        logger.info(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –º–µ–Ω—å—à–∏–º –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º:")
        logger.info(f"  - –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è GAZP: {position_size2}")
        logger.info(f"  - –¢–µ–∫—É—â–µ–µ –æ–±—â–µ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: {portfolio_manager2.current_metrics.invested_value:.2f} ‚ÇΩ")
        
        if position_size2 > 0:
            logger.info("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –ø–æ–∑–∏—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞")
        else:
            logger.warning("‚ö†Ô∏è –ü–æ–∑–∏—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–∞–∂–µ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤")
        
        logger.info("üéâ –¢–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(test_position_limits())
