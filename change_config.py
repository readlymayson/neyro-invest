#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–º–µ–Ω—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
if sys.platform == "win32":
    import codecs
    import io
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
    sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
    sys.stderr = codecs.getwriter("utf-8")(sys.stderr.detach())

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
root_dir = Path(__file__).parent
sys.path.append(str(root_dir))

from src.utils.config_selector import ConfigSelector


def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Ç–∏–ª–∏—Ç—ã —Å–º–µ–Ω—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    """
    try:
        print("üîß –£–¢–ò–õ–ò–¢–ê –°–ú–ï–ù–´ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
        print("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã\n")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
        selector = ConfigSelector()
        
        # –í—ã–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        selected_config = selector.select_config()
        
        if selected_config:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            config_info = selector.get_config_info(selected_config)
            
            print(f"\n‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_info['name']}")
            print(f"üìÑ –§–∞–π–ª: {selected_config}")
            print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {config_info['description']}")
            
            print(f"\n‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
            for feature in config_info['features']:
                print(f"   ‚Ä¢ {feature}")
            
            print(f"\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å —ç—Ç–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
            print(f"   python run.py --config \"{selected_config}\"")
            
            # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            if selected_config != str(root_dir / "config" / "main.yaml"):
                print(f"\nüíæ –•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ—Å–Ω–æ–≤–Ω–æ–π? (y/N): ", end="")
                choice = input().strip().lower()
                
                if choice in ['y', 'yes', '–¥–∞', '–¥']:
                    try:
                        import shutil
                        main_config = root_dir / "config" / "main.yaml"
                        backup_config = root_dir / "config" / "main.yaml.backup"
                        
                        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
                        if main_config.exists():
                            shutil.copy2(main_config, backup_config)
                            print(f"üìã –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_config}")
                        
                        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                        shutil.copy2(selected_config, main_config)
                        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è: {main_config}")
                        print(f"üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ—Å—Ç–æ: python run.py")
                        
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
                else:
                    print("üìù –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è")
            
        else:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
            sys.exit(0)
            
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
